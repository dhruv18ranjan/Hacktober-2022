/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* addOneRow(TreeNode* root, int val, int depth) {
        if(depth==1){
            TreeNode*a=new TreeNode(val);
            a->left=root;
            return a;
            
            
        }
        int i=1;
        queue<TreeNode*>q;
        q.push(root);
        while(i<depth){
            
            int x=q.size();
            if(i<depth-1){
            while(x--)
            {
                if(q.front()->left!=NULL)
                q.push(q.front()->left);
                if(q.front()->right!=NULL)
                q.push(q.front()->right);
                q.pop();
                
            }
            }
            else{
                
                while(x--)
            {
                TreeNode*x=q.front()->left,*y=q.front()->right;
                    q.front()->left=new TreeNode(val);
                    q.front()->right=new TreeNode(val);
                    q.front()->left->left=x;
                    q.front()->right->right=y;
                
                q.pop();
            }
                
                
                
            }
            
            
            i++;
            
        }
        return root;
        
        
    }
};